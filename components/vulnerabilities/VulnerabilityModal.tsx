import { FC, useState, ChangeEvent, FormEvent } from "react";
import { X } from "lucide-react";
import { Vulnerability } from "../../store/vulnerabilityStore";
import { toast } from "sonner";

const initialFormState: Omit<Vulnerability, "id" | "createdAt" | "updatedAt"> =
  {
    title: "",
    description: "",
    severity: "Medium",
    status: "Open",
    cve: "",
    affectedComponent: "",
    reportedBy: "",
    riskScore: 0,
  };

interface ModalProps {
  item: Vulnerability | null;
  onSave: (
    formData: Omit<Vulnerability, "id" | "createdAt" | "updatedAt">
  ) => void;
  onClose: () => void;
}

export const VulnerabilityModal: FC<ModalProps> = ({
  item,
  onSave,
  onClose,
}) => {
  const [formData, setFormData] = useState(
    item ? { ...item } : initialFormState
  );

  const handleChange = (
    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: name === "riskScore" ? parseInt(value, 10) || 0 : value,
    }));
  };

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();

    // Custom validation
    if (!formData.title.trim()) {
      toast.error("Title is required", {
        description: "Please enter a title for the vulnerability.",
      });
      return;
    }

    if (!formData.affectedComponent.trim()) {
      toast.error("Affected Component is required", {
        description: "Please enter the affected component.",
      });
      return;
    }

    if (!formData.reportedBy.trim()) {
      toast.error("Reported By is required", {
        description: "Please enter who reported this vulnerability.",
      });
      return;
    }

    onSave(formData);
  };

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center  bg-opacity-60 backdrop-blur-sm">
      <form
        onSubmit={handleSubmit}
        className="bg-neutral-900  rounded-lg shadow-xl w-full max-w-2xl m-4 border border-neutral-700 max-h-[90vh] flex flex-col"
      >
        <div className="p-6 flex-shrink-0 border-b border-neutral-700">
          <div className="flex justify-between items-center">
            <h3 className="text-xl font-semibold text-white">
              {item ? "Edit Vulnerability" : "Add New Vulnerability"}
            </h3>
            <button
              type="button"
              onClick={onClose}
              className="text-gray-400 cursor-pointer hover:text-white"
            >
              <X size={24} />
            </button>
          </div>
        </div>
        <div className="p-6 space-y-4 overflow-y-auto">
          <div>
            <label
              htmlFor="title"
              className="block text-sm font-medium text-gray-300  mb-1"
            >
              Title
            </label>
            <input
              type="text"
              id="title"
              name="title"
              value={formData.title}
              onChange={handleChange}
              className="w-full bg-neutral-700 border-gray-600  rounded-md p-2 text-white"
            />
          </div>
          <div>
            <label
              htmlFor="description"
              className="block text-sm font-medium text-gray-300 mb-1"
            >
              Description
            </label>
            <textarea
              id="description"
              name="description"
              value={formData.description}
              onChange={handleChange}
              rows={4}
              className="w-full bg-neutral-700  rounded-md p-2 text-white"
            />
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 ">
            <div>
              <label
                htmlFor="severity"
                className="block text-sm font-medium text-gray-300 mb-1 "
              >
                Severity
              </label>
              <select
                id="severity"
                name="severity"
                value={formData.severity}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white appearance-none"
              >
                <option>Critical</option>
                <option>High</option>
                <option>Medium</option>
                <option>Low</option>
                <option>Informational</option>
              </select>
            </div>
            <div>
              <label
                htmlFor="status"
                className="block text-sm font-medium text-gray-300 mb-1"
              >
                Status
              </label>
              <select
                id="status"
                name="status"
                value={formData.status}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white appearance-none"
              >
                <option>Open</option>
                <option>In Progress</option>
                <option>Resolved</option>
                <option>Closed</option>
              </select>
            </div>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label
                htmlFor="cve"
                className="block text-sm font-medium text-gray-300 mb-1"
              >
                CVE ID (optional)
              </label>
              <input
                type="text"
                id="cve"
                name="cve"
                value={formData.cve}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white"
              />
            </div>
            <div>
              <label
                htmlFor="riskScore"
                className="block text-sm font-medium text-gray-300 mb-1"
              >
                Risk Score
              </label>
              <input
                type="number"
                id="riskScore"
                name="riskScore"
                value={formData.riskScore === 0 ? "" : formData.riskScore}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none"
              />
            </div>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label
                htmlFor="affectedComponent"
                className="block text-sm font-medium text-gray-300 mb-1"
              >
                Affected Component
              </label>
              <input
                type="text"
                id="affectedComponent"
                name="affectedComponent"
                value={formData.affectedComponent}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white"
              />
            </div>
            <div>
              <label
                htmlFor="reportedBy"
                className="block text-sm font-medium text-gray-300 mb-1"
              >
                Reported By
              </label>
              <input
                type="text"
                id="reportedBy"
                name="reportedBy"
                value={formData.reportedBy}
                onChange={handleChange}
                className="w-full bg-neutral-700 border-gray-600 rounded-md p-2 text-white"
              />
            </div>
          </div>
        </div>
        <div className="flex justify-end gap-3 mt-auto p-6  flex-shrink-0 border-t border-neutral-700">
          <button
            type="button"
            onClick={onClose}
            className="px-4 py-2 bg-gray-600 text-sm font-medium rounded-md hover:bg-gray-500 cursor-pointer transition-all w-18"
          >
            Cancel
          </button>
          <button
            type="submit"
            className="px-4 py-2 bg-[#076ad3]/80 text-sm font-medium text-white rounded-md hover:bg-[#076ad3] cursor-pointer transition-all w-18"
          >
            Save
          </button>
        </div>
      </form>
    </div>
  );
};
